{"version":3,"sources":["firebase/firebaseConfig.js","hooks/useForm.js","types/types.js","helpers/loadNotes.js","helpers/fileUpload.js","actions/notes.js","components/note/NotesAppBar.js","components/note/NotesPage.js","actions/ui.js","actions/auth.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/SideBar.js","components/journal/NothingSelected.js","components/journal/JournalPage.js","components/auth/LoginPage.js","components/auth/RegisterPage.js","routers/AuthRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","types","loadNotes","uid","a","collection","get","notesSnap","notes","forEach","snapChild","push","id","data","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudesp","secure_url","activeNote","note","type","payload","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestore","doc","update","refresNote","Swal","fire","title","deleteNote","NotesAppBar","useDispatch","useSelector","state","active","fileInput","useRef","className","ref","style","display","onChange","e","files","text","allowOutsideClick","didOpen","showLoading","fileUrl","close","startUploading","onClick","current","click","NotesPage","formValues","handleInutChange","activeId","useEffect","placeholder","alt","src","delete","startDeleting","setError","err","removeError","finishLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","console","log","message","logout","JournalEntry","date","noteDate","moment","backgroundSize","backgroundImage","format","JournalEntries","map","SideBar","signOut","newNote","Date","getTime","add","NothingSelected","JournalPage","LoginPage","ui","msgError","loading","isFormValid","validator","isEmail","length","onSubmit","preventDefault","disabled","signInWithPopup","to","RegisterPage","password2","valuesForm","trim","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","path","component","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","exact","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2328a411.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAvNRqrtlX6IvaemBZ54f7k6VZoOuHiGEg\",\r\n  authDomain: \"react-app-courses-c7dfd.firebaseapp.com\",\r\n  projectId: \"react-app-courses-c7dfd\",\r\n  storageBucket: \"react-app-courses-c7dfd.appspot.com\",\r\n  messagingSenderId: \"981647805999\",\r\n  appId: \"1:981647805999:web:5e8f75bc811d26ec49c0da\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}","import { useState } from \"react\";\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = (newFormState = initialState) =>{\r\n        setValues(newFormState);\r\n    }\r\n\r\n    const handleInputChange = ({target}) =>{\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value,\r\n        });\r\n    };\r\n\r\n    return [values, handleInputChange, reset];\r\n    \r\n}\r\n","export const types = {\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start Loading',\r\n    uiFinishLoading: '[UI] Finish Loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set notes',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdated: '[Notes] updated note',\r\n    notesFileUrl: '[Notes] Updated image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout cleaning',\r\n}","import {db} from '../firebase/firebaseConfig'; \r\n\r\nexport const loadNotes = async (uid) => {\r\n\r\n    const notesSnap = await db.collection(`${uid}/journal/notes`).get();\r\n    const notes = [];\r\n\r\n    notesSnap.forEach( snapChild =>{\r\n        notes.push({\r\n            id: snapChild.id,\r\n            ...snapChild.data()\r\n        });\r\n    });\r\n\r\n    return notes;\r\n}","\r\n\r\nexport const fileUpload = async (file) =>{\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/dhmlznwat/upload';\r\n    \r\n    const formData = new FormData();\r\n    formData.append('upload_preset','react-journal');\r\n    formData.append('file', file);\r\n\r\n    try {\r\n        const resp = await fetch(cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        if (resp.ok){\r\n            const cloudesp = await resp.json();\r\n            return cloudesp.secure_url;\r\n        }else{\r\n            throw await resp.json();\r\n        }\r\n        \r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n\r\n}","import {db} from '../firebase/firebaseConfig';\r\nimport Swal from 'sweetalert2'\r\nimport { types } from '../types/types';\r\nimport { loadNotes } from '../helpers/loadNotes';\r\nimport { fileUpload } from '../helpers/fileUpload';\r\n\r\nexport const startNewNote = () =>{\r\n    return async (dispatch, getState) =>{\r\n        const uid = getState().auth.uid;\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        const doc = await db.collection(`${uid}/journal/notes`).add(newNote);\r\n        \r\n        dispatch(activeNote(doc.id, newNote));\r\n        dispatch(addNewNote(doc.id, newNote));\r\n    }\r\n}\r\n\r\nexport const activeNote = (id, note) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n});\r\n\r\nexport const addNewNote = ( id, note ) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id, ...note\r\n    }\r\n})\r\n\r\nexport const startLoadingNotes = (uid) =>{\r\n    return async(dispatch) =>{\r\n        const notes = await loadNotes(uid);\r\n        dispatch(setNotes(notes));\r\n    }\r\n}\r\n\r\nexport const setNotes = (notes) =>({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n});\r\n\r\n\r\nexport const startSaveNote = (note) =>{\r\n    return async (dispatch, getState) =>{\r\n        const uid = getState().auth.uid;\r\n        if(!note.url){\r\n            delete note.url\r\n        }\r\n        const noteToFirestore = {...note};\r\n        delete noteToFirestore.id;\r\n\r\n        await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore);\r\n        dispatch(refresNote(note.id, note));\r\n        Swal.fire('Saved', note.title,'success');\r\n    }\r\n}\r\n\r\nexport const refresNote= (id, note) => ({\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id, note\r\n    }\r\n})\r\n\r\n\r\nexport const startUploading = (file) =>{\r\n    return async (dispatch, getState) =>{\r\n        const {active: activeNote} =  getState().notes;\r\n        Swal.fire({\r\n            title:'Uploading...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            didOpen: () =>{\r\n                Swal.showLoading()\r\n            }\r\n        });\r\n        const fileUrl = await fileUpload(file);\r\n        activeNote.url = fileUrl;\r\n        dispatch(startSaveNote(activeNote));\r\n        Swal.close();\r\n    }\r\n}\r\n\r\nexport const startDeleting = (id) =>{\r\n    return async (dispatch, getState) =>{\r\n        const uid = getState().auth.uid;\r\n        await db.doc(`${uid}/journal/notes/${id}`).delete();\r\n\r\n        dispatch(deleteNote(id));\r\n    }\r\n}\r\n\r\nexport const deleteNote = (id) =>({\r\n    type: types.notesDelete,\r\n    payload: id\r\n});\r\n\r\nexport const noteLogout = () => ({\r\n    type: types.notesLogoutCleaning,\r\n})\r\n\r\n","import React, { useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {startSaveNote, startUploading} from '../../actions/notes'\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { active: note} = useSelector(state => state.notes)\r\n\r\n    const fileInput = useRef(null);\r\n\r\n    const handleSave = () =>{\r\n        dispatch(startSaveNote(note));\r\n    }\r\n\r\n    const handlePiture = () =>{\r\n        // document.querySelector('#fileSelector').click();\r\n        fileInput.current.click();\r\n    }\r\n\r\n    const handleFileChange = (e) =>{\r\n        const file = e.target.files[0];\r\n        if(file){\r\n            dispatch(startUploading(file));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>28 of august 2020</span>\r\n\r\n            <input\r\n                id=\"fileSelector\"\r\n                ref={fileInput}\r\n                type=\"file\"\r\n                name=\"file\"\r\n                style={{display: 'none'}}\r\n                onChange={handleFileChange}\r\n            />\r\n\r\n            <div>\r\n                <button className=\"btn\" onClick={handlePiture}>\r\n                    Picture\r\n                </button>\r\n                <button className=\"btn\" onClick={handleSave}>\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { NotesAppBar } from './NotesAppBar'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { activeNote, startDeleting } from '../../actions/notes';\r\n\r\nexport const NotesPage = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {active: note} = useSelector( state => state.notes);\r\n    const [ formValues, handleInutChange, reset] = useForm(note);\r\n    const {body, title, id} = formValues;\r\n    const activeId = useRef(note.id);\r\n\r\n    useEffect(() => {\r\n        if(note.id !== activeId.current){\r\n            reset(note);\r\n            activeId.current = note.id;\r\n        }\r\n    }, [note, reset]);\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(activeNote(formValues.id, {...formValues}));\r\n    }, [formValues, dispatch]);\r\n\r\n    const handleDelete = () =>{\r\n        dispatch(startDeleting(id));\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            <NotesAppBar />\r\n            <div className=\"notes__content\">\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Some awesome title\"\r\n                    className=\"notes__title-input\"\r\n                    name=\"title\"\r\n                    value={title}\r\n                    onChange={handleInutChange}\r\n                />\r\n\r\n                <textarea\r\n                    placeholder=\"What happened today?\"\r\n                    className=\"notes__textarea\"\r\n                    name=\"body\"\r\n                    value={body}\r\n                    onChange={handleInutChange}\r\n                ></textarea>\r\n\r\n                {\r\n                    (note.url) \r\n                    &&\r\n                    (\r\n                    <div className=\"notes__image\">\r\n                        <img \r\n                            alt=\"Landscape\"\r\n                            src={note.url}\r\n                        />\r\n                    </div>\r\n                    )\r\n                }\r\n\r\n            </div>\r\n\r\n            <button \r\n                className=\"btn btn-danger\"\r\n                onClick={handleDelete}\r\n            >\r\n                Delete\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\n\r\nexport const setError = (err) =>(\r\n    {\r\n        type: types.uiSetError,\r\n        payload: err,\r\n    }\r\n)\r\n\r\nexport const removeError = () =>(\r\n    {\r\n        type: types.uiRemoveError,\r\n    }\r\n)\r\n\r\nexport const startLoading = () =>(\r\n    {\r\n        type: types.uiStartLoading,\r\n    }\r\n)\r\n\r\nexport const finishLoading = () =>(\r\n    {\r\n        type: types.uiFinishLoading,\r\n    }\r\n)","import {firebase, googleAuthProvider} from '../firebase/firebaseConfig'\r\nimport { types } from \"../types/types\"\r\nimport { finishLoading, startLoading } from './ui'\r\n\r\nimport Swal from 'sweetalert2';\r\nimport { noteLogout } from './notes';\r\n\r\nexport const startLoginEmailPassword = (email, password) =>{\r\n\r\n    return (dispatch) => {\r\n\r\n        dispatch(startLoading());\r\n\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then( ({user})=>{\r\n                dispatch(\r\n                    login(user.displayName, user.displayName)\r\n                );\r\n                dispatch(finishLoading());\r\n            }).catch(e =>{\r\n                console.log(e);\r\n                dispatch(finishLoading());\r\n                Swal.fire('Error', e.message,'error');\r\n            } );\r\n        \r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () =>{\r\n    return (dispatch) => {\r\n        firebase.auth().signInWithPopup(googleAuthProvider)\r\n            .then( ({user}) =>{\r\n                dispatch(login(user.uid, user.displayName))\r\n            });\r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n    return (dispatch) =>{\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then(  async({user}) =>{\r\n                await user.updateProfile({displayName: name});\r\n                dispatch(login(user.uid, user.displayName))\r\n            })\r\n            .catch( e=> {\r\n                console.log(e); \r\n                Swal.fire('Error', e.message,'error');\r\n            });\r\n    }\r\n\r\n}\r\n\r\nexport const login = (uid, name) =>{\r\n\r\n    return {\r\n        type: types.login,\r\n        payload: {\r\n            uid,\r\n            name\r\n        }\r\n    }\r\n}\r\n\r\nexport const startLogout = () => {\r\n    return async ( dispatch ) => {\r\n        await firebase.auth().signOut();\r\n        dispatch(logout());\r\n        dispatch(noteLogout());\r\n    }\r\n}\r\n\r\nexport const logout = () =>({\r\n    type : types.logout\r\n})\r\n","import React from 'react'\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../actions/notes';\r\n\r\nexport const JournalEntry = ({id, title, date, body, url}) => {\r\n\r\n    const noteDate = moment(date);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleEntryClick = () =>{\r\n        dispatch(\r\n            activeNote(id, \r\n                {title,date,body,url}\r\n            )\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"journal__entry pointer animate__animated animate__fadeIn animate__faster\" \r\n            onClick={handleEntryClick}>\r\n            {\r\n                url &&\r\n                (<div \r\n                    className=\"journal__entry-picture\"\r\n                    style={ {\r\n                        backgroundSize: 'cover',\r\n                        backgroundImage: `url(${url})`\r\n                    } }\r\n                >\r\n                </div>)\r\n            }\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">\r\n                    {title}\r\n                </p>\r\n                <p className=\"journal__entry-content\">\r\n                    {body}\r\n                </p>\r\n            </div>\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>{noteDate.format('dddd')}</span>\r\n                <h4>{noteDate.format('Do')}</h4>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { JournalEntry } from './JournalEntry'\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const {notes} = useSelector( state => state.notes );\r\n    \r\n    return (\r\n        <div className=\"journal__entries\" >\r\n            {\r\n                notes.map( note => (\r\n                    <JournalEntry \r\n                        key={note.id} \r\n                        {...note}\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNote } from '../../actions/notes';\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\nexport const SideBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = () =>{\r\n        dispatch(startLogout());\r\n    }  \r\n\r\n    const handleAddNew = () =>{\r\n        dispatch(startNewNote());\r\n    }\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span> Luis</span>\r\n                </h3>\r\n                <button className=\"btn\" onClick={handleLogout}>\r\n                    Logout\r\n                </button>\r\n            </div>\r\n\r\n            <div className=\"journal__new-entry\"\r\n                onClick={handleAddNew}>\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">\r\n                    New Entry\r\n                </p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n              Select something\r\n              <br />\r\n              pr create an entry!  \r\n            </p>\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { NotesPage } from '../note/NotesPage'\r\nimport { SideBar } from './SideBar'\r\nimport {useSelector} from 'react-redux'\r\nimport { NothingSelected } from './NothingSelected'\r\n\r\nexport const JournalPage = () => {\r\n\r\n    const { active} = useSelector( state => state.notes );\r\n\r\n    return (\r\n        <div className=\"journal__main-content animate__animated animate__fadeIn animate__faster\">\r\n\r\n            <SideBar />\r\n            <main>\r\n                {\r\n                    active?\r\n                    <NotesPage />\r\n                    :\r\n                    <NothingSelected />\r\n                }\r\n               \r\n                \r\n            </main>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport validator from 'validator';\r\nimport { startLoginEmailPassword, startGoogleLogin } from '../../actions/auth';\r\nimport { removeError, setError } from '../../actions/ui';\r\nimport { useForm } from '../../hooks/useForm'\r\n\r\nexport const LoginPage = () => {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    const { msgError, loading } = useSelector( state => state.ui );\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        email:'nando@gmail.com',\r\n        password:'123456'\r\n    });\r\n\r\n    const {email, password} = formValues;\r\n\r\n    const handleLogin = (e) =>{\r\n        e.preventDefault();\r\n\r\n        console.log(isFormValid())\r\n        if(isFormValid()){\r\n            dispatch(startLoginEmailPassword(email, password));\r\n        }\r\n    }\r\n\r\n    const isFormValid = () => {\r\n        if( !validator.isEmail(email) ){\r\n            dispatch(setError('Email should be valid'));\r\n            return false;\r\n        } else if( password.length < 5){\r\n            dispatch(setError('Password should be at least 6 characters'));\r\n            return false;\r\n        }\r\n        dispatch(removeError());\r\n        return true;\r\n    }\r\n\r\n    const handleGoogleLogin = () => {\r\n        dispatch(startGoogleLogin());\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">\r\n                Login\r\n            </h3>\r\n            <form onSubmit={handleLogin} className=\"animate__animated animate__fadeIn animate__faster\">\r\n                {\r\n                    msgError &&   \r\n                    (\r\n                    <div className=\"auth__alert-error\">\r\n                        {msgError} \r\n                    </div>\r\n                    )\r\n                }\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <button \r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                    disabled={loading}\r\n                >\r\n                    Login\r\n                </button>\r\n\r\n                <hr />\r\n\r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with social networks</p>\r\n                    <div \r\n                        className=\"google-btn\"\r\n                        onClick={handleGoogleLogin}\r\n                        >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <Link \r\n                    className=\"link\"\r\n                    to=\"/auth/register\">\r\n                    Create new account\r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport validator from 'validator'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { removeError, setError } from '../../actions/ui'\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth'\r\n\r\nexport const RegisterPage = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { msgError } = useSelector( state => state.ui );\r\n\r\n    const [valuesForm, handleInputChange] = useForm({\r\n        name: 'Whatever',\r\n        email: 'test@gamil.com',\r\n        password: '123456',\r\n        password2: '123456'\r\n    });\r\n\r\n    const {name, email, password, password2} = valuesForm;\r\n\r\n    const handleRegister = (e) =>{\r\n        e.preventDefault();\r\n        console.log(valuesForm);\r\n\r\n        if(isFormValid()){\r\n            dispatch(startRegisterWithEmailPasswordName(email, password, name));\r\n        }\r\n    }\r\n\r\n    const isFormValid = () =>{\r\n        if(name.trim().length === 0){\r\n            dispatch(setError('Name is required'));\r\n            return false;\r\n        }else if( !validator.isEmail(email)){\r\n            dispatch(setError('Email is not valid'));\r\n            return false;\r\n        }else if( password !== password2 || password2.length < 5){\r\n            dispatch(setError('Password should be at least 6 characters and match'));\r\n            return false;\r\n        }\r\n        dispatch(removeError());\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">\r\n                Register\r\n            </h3>\r\n            <form onSubmit={handleRegister} className=\"animate__animated animate__fadeIn animate__faster\">\r\n\r\n                {\r\n                    msgError &&   \r\n                    (<div className=\"auth__alert-error\">\r\n                        {msgError} \r\n                    </div>)\r\n                }\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    value={name}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Confirm password\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    value={password2}\r\n                    onChange={handleInputChange}\r\n                />\r\n                <button \r\n                    type=\"submit\"\r\n                    className=\"mb-5 btn btn-primary btn-block\"\r\n                    \r\n                >\r\n                    Register\r\n                </button>\r\n\r\n                <hr />\r\n\r\n            \r\n                <Link \r\n                    className=\"link mt-5\"\r\n                    to=\"/auth/login\">\r\n                    Already registered?\r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport {\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\nimport { LoginPage } from '../components/auth/LoginPage';\r\nimport { RegisterPage } from '../components/auth/RegisterPage';\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route path=\"/auth/login\" component={LoginPage}/>\r\n                    <Route path=\"/auth/register\" component={RegisterPage} />\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\n// impt\r\n\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    \r\n    return (\r\n        <Route {...rest}\r\n            component={\r\n                (props) =>(\r\n                    (isAuthenticated)?\r\n                    <Component {...props}/>:\r\n                    <Redirect to=\"/auth/login\" />\r\n                )\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={\r\n                (props) =>(\r\n                    ( isAuthenticated)\r\n                    ? <Redirect to=\"/\" /> \r\n                    : <Component {...props}/>\r\n                    \r\n                )\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\nimport { firebase } from '../firebase/firebaseConfig'\r\nimport { JournalPage } from '../components/journal/JournalPage';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../actions/auth';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nimport {  startLoadingNotes } from '../actions/notes';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [checking, setChecking] = useState(true);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    useEffect(() => {\r\n      firebase.auth().onAuthStateChanged( async (user)=>{\r\n        if(user?.uid){\r\n            dispatch(login(user.uid, user.displayName));\r\n            setIsLoggedIn(true);\r\n            \r\n            dispatch(startLoadingNotes(user.uid));\r\n        } else {\r\n            setIsLoggedIn(false);\r\n        }\r\n        setChecking(false);\r\n      });\r\n        \r\n    }, [dispatch, setChecking]);\r\n\r\n    if(checking){\r\n        return (\r\n            <h1>Wait a moment</h1>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute \r\n                        path=\"/auth\" \r\n                        component={AuthRouter} \r\n                        isAuthenticated={isLoggedIn}   \r\n                    />\r\n                    <PrivateRoute \r\n                        exact \r\n                        path=\"/\" \r\n                        component={JournalPage} \r\n                        isAuthenticated={isLoggedIn}\r\n                    />\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n};\r\n\r\nexport const notesReducer = (state =initialState, action ) =>{\r\n    \r\n    switch (action.type) {\r\n\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [...action.payload]\r\n            }\r\n\r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map( note => \r\n                    note.id === action.payload.id\r\n                    ?\r\n                    action.payload.note\r\n                    :\r\n                    note\r\n                )\r\n            }\r\n        \r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter( note => note.id !== action.payload)\r\n            }\r\n\r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [ action.payload, ...state.notes ]\r\n            }\r\n\r\n        case types.notesLogoutCleaning:\r\n            return {\r\n                ...state, \r\n                active: null,\r\n                notes: []\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = (state=initialState, action) =>{\r\n    \r\n    switch(action.type){\r\n        case types.uiSetError:\r\n            return{\r\n                ...state,\r\n                msgError: action.payload\r\n            };\r\n\r\n        case types.uiRemoveError:\r\n            return{\r\n                ...state,\r\n                msgError: null\r\n            };\r\n        \r\n        case types.uiStartLoading:\r\n            return{\r\n                ...state,\r\n                loading: true\r\n            };\r\n\r\n        case types.uiFinishLoading:\r\n            return{\r\n                ...state,\r\n                loading: false\r\n            };\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}","import {createStore, combineReducers,applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n});\r\n\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","import { types } from \"../types/types\";\r\n\r\n/*\r\n    {\r\n        uid: dsfffgd,\r\n        name: Lucho\r\n    }\r\n*/\r\nexport const authReducer = (state={}, action) =>{\r\n\r\n    switch (action.type) {\r\n        case types.login:\r\n            \r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.name\r\n            };\r\n\r\n        case types.logout:\r\n        \r\n            return {};\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import React from 'react';\r\nimport {Provider} from 'react-redux';\r\n\r\nimport { AppRouter } from './routers/AppRouter';\r\nimport { store } from './store/store';\r\n\r\n\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss';\n\nReactDOM.render(\n\n    <JournalApp />,\n\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}